(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{370:function(a,e,t){"use strict";t.r(e);var r=t(32),s=Object(r.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"glibc-and-openssl-patching-kernelcare"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#glibc-and-openssl-patching-kernelcare","aria-hidden":"true"}},[a._v("#")]),a._v(" Glibc and OpenSSL patching (KernelCare+)")]),a._v(" "),t("p",[a._v("Glibc and OpenSSL patching is now available for the following operating systems:")]),a._v(" "),t("ul",[t("li",[a._v("CentOS/RHEL/CloudLinux OS 7")]),a._v(" "),t("li",[a._v("CloudLinux OS 8")]),a._v(" "),t("li",[a._v("AlmaLinux 8")]),a._v(" "),t("li",[a._v("Oracle Linux 7")]),a._v(" "),t("li",[a._v("Oracle Linux 8")]),a._v(" "),t("li",[a._v("Debian 9/10")]),a._v(" "),t("li",[a._v("Ubuntu 16.04/18.04/20.04")]),a._v(" "),t("li",[a._v("Proxmox VE 6.")]),a._v(" "),t("li",[a._v("Scientific Linux")])]),a._v(" "),t("h2",{attrs:{id:"installation-and-upgrade"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation-and-upgrade","aria-hidden":"true"}},[a._v("#")]),a._v(" Installation and upgrade")]),a._v(" "),t("p",[a._v("Userspace processes patching feature is available in the KernelCare package.")]),a._v(" "),t("h2",{attrs:{id:"usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[a._v("#")]),a._v(" Usage")]),a._v(" "),t("p",[a._v("To apply the available patches to all userspace processes, run the following command:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kcarectl --lib-update\n")])])]),t("p",[a._v("To gather information about what processes were patched, run the following command:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kcarectl --lib-info\n")])])]),t("p",[a._v("To gather information about applyed patches:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kcarectl --lib-patch-info\n")])])]),t("p",[a._v("To unpatch all involved processes, run the following command:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ kcarectl --lib-unload\n")])])]),t("h1",{attrs:{id:"blacklisting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blacklisting","aria-hidden":"true"}},[a._v("#")]),a._v(" Blacklisting")]),a._v(" "),t("p",[a._v("If you need to avoid patching of some particular process it could be done by blacklist defining.\nDefault one is located in "),t("code",[a._v("/var/lib/libcare/blacklist")]),a._v(" and contains a package-provided list.\nYou can overwrite those values by creating "),t("code",[a._v("/var/cache/kcare/userspace/blacklist")]),a._v(" file with the higher priority.")]),a._v(" "),t("h2",{attrs:{id:"auto-update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#auto-update","aria-hidden":"true"}},[a._v("#")]),a._v(" Auto update")]),a._v(" "),t("p",[a._v("Userspace patching cron job is disabled by default. To enable it, run the following command:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("libcare-cron init\n")])])]),t("h2",{attrs:{id:"troubleshooting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[a._v("#")]),a._v(" Troubleshooting")]),a._v(" "),t("h3",{attrs:{id:"auditd-logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#auditd-logs","aria-hidden":"true"}},[a._v("#")]),a._v(" Auditd logs")]),a._v(" "),t("p",[a._v("The libcare tools heavily use a "),t("code",[a._v("ptrace")]),a._v(" syscall and, in case of "),t("code",[a._v("auditd")]),a._v(" trace it's calls, there will be a lot of records in a log. There is a rule that provided by kernelcare package and located here "),t("code",[a._v("/etc/audit/rules.d/kernelcare.rules")]),a._v(". It will exclue kernelcare processes from audit.")]),a._v(" "),t("p",[a._v("Note: no such rule is provided for "),t("code",[a._v("el6")]),a._v(" due to old "),t("code",[a._v("autditd")]),a._v(" restrictions. There is a command that will add such rule in runtime")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('auditctl -l | grep kcare | cut -d\' \' -f2- | xargs -t -L1 -r auditctl -d && pgrep libcare-server | xargs -t -n1 -i auditctl -A exit,never -F arch=b64 -S ptrace -F pid="{}" -k kcarever | xargs -t -n1 -i auditctl -A exit,never -F arch=b64 -S ptrace -F pid="{}" -k kcare\n')])])]),t("p",[a._v("It removes all currently enabled kernelcare rules and adds a new one by libcare's process ID.")])])},[],!1,null,null,null);e.default=s.exports}}]);